name: Promote Docker Image

on:
  workflow_dispatch:
    inputs:
      source_environment:
        description: "Select the source environment"
        required: true
        type: choice
        options:
          - dev
      service_name:
        description: "Select the source service name"
        required: true
        type: choice
        options:
          - admin-service
          - anti-corruption-layer
          - consent-text-service
          - consent-service
          - customer-service
          - retail-ui
          - retail-ui-prism
          - systems-directory-service
      tag:
        description: "Specify the Docker image tag in the source ACR"
        required: true
        type: string
      destination_environment:
        description: "Select the destination environment"
        required: true
        type: choice
        options:
          - prod

jobs:
  promote-docker-image:
    runs-on: ubuntu-latest
    env:
      DEV_ACR_USERNAME: ${{ vars.DEV_ACR_USERNAME }}
      DEV_ACR_PREFIX: ${{ vars.DEV_ACR_PREFIX }}
      PROD_ACR_USERNAME: ${{ vars.PROD_ACR_USERNAME }}
      PROD_ACR_PREFIX: ${{ vars.PROD_ACR_PREFIX }}
    if: |
      (github.event.inputs.source_environment == 'dev' && (github.event.inputs.destination_environment == 'int' || github.event.inputs.destination_environment == 'prod')) ||
      (github.event.inputs.source_environment == 'int' && github.event.inputs.destination_environment == 'prod')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Variables
        id: set-vars
        run: |
          if [ "${{ github.event.inputs.source_environment }}" == "dev" ]; then
            echo "SOURCE_ACR_USERNAME=${{ env.DEV_ACR_USERNAME }}" >> $GITHUB_OUTPUT
            echo "SOURCE_ACR_PASSWORD=${{ secrets.DEV_ACR_PASSWORD }}" >> $GITHUB_OUTPUT
            echo "SOURCE_ACR=${{ env.DEV_ACR_PREFIX }}.azurecr.io" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.source_environment }}" == "int" ]; then
            echo "Invalid source environment - change it once int created"
            exit 1
          else
            echo "Invalid source environment"
            exit 1
          fi

          if [ "${{ github.event.inputs.destination_environment }}" == "prod" ]; then
            echo "DEST_ACR_USERNAME=${{ env.PROD_ACR_USERNAME }}" >> $GITHUB_OUTPUT
            echo "DEST_ACR_PASSWORD=${{ secrets.PROD_ACR_PASSWORD }}" >> $GITHUB_OUTPUT
            echo "DEST_ACR=${{ env.PROD_ACR_PREFIX }}.azurecr.io" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.destination_environment }}" == "int" ]; then
            echo "Invalid dest environment - change it once int created"
            exit 1
          else
            echo "Invalid source environment"
            exit 1
          fi
          
          if [ -z "${{ github.event.inputs.tag }}" ]; then
            echo "Tag is empty!"
            exit 1
          else
            echo "Tag is set: ${{ github.event.inputs.tag }}"
          fi

      - name: Print Variables
        id: set-vars
        run: |
          source $GITHUB_ENV
          
          echo "SOURCE_ACR_USERNAME $SOURCE_ACR_USERNAME"
          echo "SOURCE_ACR_USERNAME $SOURCE_ACR_USERNAME"
          echo "SOURCE_ACR_PASSWORD $SOURCE_ACR_PASSWORD"
          echo "DEST_ACR_USERNAME $DEST_ACR_USERNAME"
          echo "DEST_ACR_USERNAME $DEST_ACR_USERNAME"
          echo "DEST_ACR_PASSWORD $DEST_ACR_PASSWORD"
          echo "DEST_ACR_PASSWORD $DEST_ACR_PASSWORD"
          echo "SERVICE: ${{ github.event.inputs.service }}"
          echo "TAG: ${{ github.event.inputs.tag }}"

#      - name: Login to Source Azure ACR
#        uses: azure/docker-login@v2
#        with:
#          login-server: ${{ steps.set-vars.outputs.SOURCE_ACR }}
#          username: ${{ steps.set-vars.outputs.SOURCE_ACR_USERNAME }}
#          password: ${{ steps.set-vars.outputs.SOURCE_ACR_PASSWORD }}

#      - name: Pull Image from Source ACR
#        run: |
#          docker pull ${{ steps.set-vars.outputs.SOURCE_ACR }}/${{ github.event.inputs.service }}:${{ github.event.inputs.tag }}
#
#      - name: Login to Destination Azure ACR
#        uses: azure/docker-login@v2
#        with:
#          login-server: ${{ steps.set-vars.outputs.DEST_ACR }}
#          username: ${{ steps.set-vars.outputs.DEST_ACR_USERNAME }}
#          password: ${{ steps.set-vars.outputs.DEST_ACR_PASSWORD }}

#      - name: Tag and Push Image to Destination ACR
#        run: |
#          docker tag ${{ steps.set-vars.outputs.SOURCE_ACR }}/${{ github.event.inputs.service }}:${{ github.event.inputs.tag }} ${{ steps.set-vars.outputs.DEST_ACR }}/${{ github.event.inputs.service }}:${{ github.event.inputs.tag }}
#          docker push ${{ steps.set-vars.outputs.DEST_ACR }}/${{ github.event.inputs.service }}:${{ github.event.inputs.tag }}
#
#      - name: Clean up local images
#        run: |
#          docker rmi ${{ steps.set-vars.outputs.SOURCE_ACR }}/${{ github.event.inputs.service }}:${{ github.event.inputs.tag }}
#          docker rmi ${{ steps.set-vars.outputs.DEST_ACR }}/${{ github.event.inputs.service }}:${{ github.event.inputs.tag }}
