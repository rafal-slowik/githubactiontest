name: Promote Docker Image

on:
  workflow_dispatch:
    inputs:
      source_environment:
        description: "Select the source environment"
        required: true
        type: choice
        options: 
          - dev
          - int
      service_name:
        description: "Select the service name"
        required: true
        type: choice
        options: 
          - service1
          - service2
          - service3  # Add available services here
      source_tag:
        description: "Specify the Docker image tag in the source ACR"
        required: true
        type: string
      destination_environment:
        description: "Select the destination environment"
        required: true
        type: choice
        options: 
          - int
          - prod

jobs:
  promote-docker-image:
    runs-on: ubuntu-latest
    if: |
      (github.event.inputs.source_environment == 'dev' && (github.event.inputs.destination_environment == 'int' || github.event.inputs.destination_environment == 'prod')) ||
      (github.event.inputs.source_environment == 'int' && github.event.inputs.destination_environment == 'prod')
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set Variables
        id: vars
        run: |
          SOURCE_ENV="${{ github.event.inputs.source_environment }}"
          DEST_ENV="${{ github.event.inputs.destination_environment }}"
          SERVICE="${{ github.event.inputs.service_name }}"
          TAG="${{ github.event.inputs.source_tag }}"
          
          # Define ACR names based on environment
          if [ "$SOURCE_ENV" == "dev" ]; then
            SRC_ACR="devacrname"
          elif [ "$SOURCE_ENV" == "int" ]; then
            SRC_ACR="intacrname"
          fi

          if [ "$DEST_ENV" == "int" ]; then
            DEST_ACR="intacrname"
          elif [ "$DEST_ENV" == "prod" ]; then
            DEST_ACR="prodacrname"
          fi
          
          echo "SOURCE_ENV=$SOURCE_ENV" >> $GITHUB_ENV
          echo "DEST_ENV=$DEST_ENV" >> $GITHUB_ENV
          echo "SERVICE=$SERVICE" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "SRC_ACR=$SRC_ACR" >> $GITHUB_ENV
          echo "DEST_ACR=$DEST_ACR" >> $GITHUB_ENV

      - name: Login to Source Azure ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.SRC_ACR }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Pull Image from Source ACR
        run: |
          docker pull $SRC_ACR.azurecr.io/$SERVICE:$TAG

      - name: Login to Destination Azure ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.DEST_ACR }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Tag and Push Image to Destination ACR
        run: |
          docker tag $SRC_ACR.azurecr.io/$SERVICE:$TAG $DEST_ACR.azurecr.io/$SERVICE:$TAG
          docker push $DEST_ACR.azurecr.io/$SERVICE:$TAG

      - name: Clean up local images
        run: |
          docker rmi $SRC_ACR.azurecr.io/$SERVICE:$TAG
          docker rmi $DEST_ACR.azurecr.io/$SERVICE:$TAG
I
